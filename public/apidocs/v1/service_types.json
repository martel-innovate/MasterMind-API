{
  "apiVersion": "1.0",
  "swaggerVersion": "1.2",
  "basePath": "http://localhost:3000",
  "resourcePath": "service_types",
  "apis": [
    {
      "path": "/v1/service_types",
      "operations": [
        {
          "parameters": [
            {
              "paramType": "header",
              "name": "Authorization",
              "type": "string",
              "description": "Authentication token",
              "required": true
            }
          ],
          "responseMessages": [
            {
              "code": 200,
              "responseModel": "ServiceType",
              "message": "Success"
            },
            {
              "code": 401,
              "responseModel": null,
              "message": "The actor does not have permission to perform this action"
            },
            {
              "code": 401,
              "responseModel": null,
              "message": "Signature has expired"
            },
            {
              "code": 403,
              "responseModel": null,
              "message": "The provided API token is invalid"
            }
          ],
          "summary": "Fetches all Service Types",
          "notes": "This lists all the Service Types",
          "nickname": "V1::ServiceTypes#index",
          "method": "get"
        }
      ]
    },
    {
      "path": "/v1/service_types",
      "operations": [
        {
          "parameters": [
            {
              "paramType": "header",
              "name": "Authorization",
              "type": "string",
              "description": "Authentication token",
              "required": true
            },
            {
              "paramType": "form",
              "name": "name",
              "type": "string",
              "description": "The name of this Service Type",
              "required": true
            },
            {
              "paramType": "form",
              "name": "version",
              "type": "string",
              "description": "The version of this Service Type",
              "required": true
            },
            {
              "paramType": "form",
              "name": "service_protocol_type",
              "type": "string",
              "description": "The protcol type of this Service Type",
              "required": true
            },
            {
              "paramType": "form",
              "name": "ngsi_version",
              "type": "string",
              "description": "The NGSI Version of this Service Type",
              "required": true
            },
            {
              "paramType": "form",
              "name": "configuration_template",
              "type": "string",
              "description": "The configuration template (the mastermind.yml file) of this Service Type",
              "required": true
            },
            {
              "paramType": "form",
              "name": "deploy_template",
              "type": "string",
              "description": "The deploy template (the docker-compose.yml file) of this Service Type",
              "required": true
            },
            {
              "paramType": "form",
              "name": "local_path",
              "type": "string",
              "description": "The local path of the Service Type's files in MasterMind's API server",
              "required": true
            },
            {
              "paramType": "form",
              "name": "is_imported",
              "type": "string",
              "description": "True if this is a custom Service Type that was imported in a Project",
              "required": true
            },
            {
              "paramType": "form",
              "name": "project_id",
              "type": "integer",
              "description": "The Id of the Project this Service Type belongs to if imported (0 otherwise)",
              "required": true
            }
          ],
          "responseMessages": [
            {
              "code": 200,
              "responseModel": "ServiceType",
              "message": "Success"
            },
            {
              "code": 401,
              "responseModel": null,
              "message": "The actor does not have permission to perform this action"
            },
            {
              "code": 401,
              "responseModel": null,
              "message": "Signature has expired"
            },
            {
              "code": 403,
              "responseModel": null,
              "message": "The provided API token is invalid"
            },
            {
              "code": 422,
              "responseModel": null,
              "message": "Invalid entity provided"
            }
          ],
          "summary": "Creates a Service Type",
          "notes": "This creates a new Service Type",
          "nickname": "V1::ServiceTypes#create",
          "method": "post"
        }
      ]
    },
    {
      "path": "/v1/service_types/{id}",
      "operations": [
        {
          "parameters": [
            {
              "paramType": "header",
              "name": "Authorization",
              "type": "string",
              "description": "Authentication token",
              "required": true
            },
            {
              "paramType": "path",
              "name": "id",
              "type": "integer",
              "description": "Service Type Id",
              "required": true
            }
          ],
          "responseMessages": [
            {
              "code": 200,
              "responseModel": "ServiceType",
              "message": "Success"
            },
            {
              "code": 401,
              "responseModel": null,
              "message": "The actor does not have permission to perform this action"
            },
            {
              "code": 401,
              "responseModel": null,
              "message": "Signature has expired"
            },
            {
              "code": 403,
              "responseModel": null,
              "message": "The provided API token is invalid"
            },
            {
              "code": 404,
              "responseModel": null,
              "message": "Service Type not found"
            }
          ],
          "summary": "Fetches a specific Service Type",
          "notes": "This fetches the Service Type matching the given id",
          "nickname": "V1::ServiceTypes#show",
          "method": "get"
        }
      ]
    },
    {
      "path": "/v1/service_types/{id}",
      "operations": [
        {
          "parameters": [
            {
              "paramType": "header",
              "name": "Authorization",
              "type": "string",
              "description": "Authentication token",
              "required": true
            },
            {
              "paramType": "path",
              "name": "id",
              "type": "integer",
              "description": "Service Type Id",
              "required": true
            },
            {
              "paramType": "form",
              "name": "name",
              "type": "string",
              "description": "The name of this Service Type",
              "required": false
            },
            {
              "paramType": "form",
              "name": "version",
              "type": "string",
              "description": "The version of this Service Type",
              "required": false
            },
            {
              "paramType": "form",
              "name": "service_protocol_type",
              "type": "string",
              "description": "The protcol type of this Service Type",
              "required": false
            },
            {
              "paramType": "form",
              "name": "ngsi_version",
              "type": "string",
              "description": "The NGSI Version of this Service Type",
              "required": false
            },
            {
              "paramType": "form",
              "name": "configuration_template",
              "type": "string",
              "description": "The configuration template (the mastermind.yml file) of this Service Type",
              "required": false
            },
            {
              "paramType": "form",
              "name": "deploy_template",
              "type": "string",
              "description": "The deploy template (the docker-compose.yml file) of this Service Type",
              "required": false
            },
            {
              "paramType": "form",
              "name": "local_path",
              "type": "string",
              "description": "The local path of the Service Type's files in MasterMind's API server",
              "required": true
            },
            {
              "paramType": "form",
              "name": "is_imported",
              "type": "string",
              "description": "True if this is a custom Service Type that was imported in a Project",
              "required": true
            },
            {
              "paramType": "form",
              "name": "project_id",
              "type": "integer",
              "description": "The Id of the Project this Service Type belongs to if imported (0 otherwise)",
              "required": true
            }
          ],
          "responseMessages": [
            {
              "code": 200,
              "responseModel": "ServiceType",
              "message": "Success"
            },
            {
              "code": 401,
              "responseModel": null,
              "message": "The actor does not have permission to perform this action"
            },
            {
              "code": 401,
              "responseModel": null,
              "message": "Signature has expired"
            },
            {
              "code": 403,
              "responseModel": null,
              "message": "The provided API token is invalid"
            },
            {
              "code": 404,
              "responseModel": null,
              "message": "Service Type not found"
            },
            {
              "code": 422,
              "responseModel": null,
              "message": "Invalid entity provided"
            }
          ],
          "summary": "Updates a Service Type",
          "notes": "This updates the Service Type matching the given id",
          "nickname": "V1::ServiceTypes#update",
          "method": "patch"
        }
      ]
    },
    {
      "path": "/v1/service_types/{id}",
      "operations": [
        {
          "parameters": [
            {
              "paramType": "header",
              "name": "Authorization",
              "type": "string",
              "description": "Authentication token",
              "required": true
            },
            {
              "paramType": "path",
              "name": "id",
              "type": "integer",
              "description": "Service Type Id",
              "required": true
            }
          ],
          "responseMessages": [
            {
              "code": 200,
              "responseModel": "ServiceType",
              "message": "Success"
            },
            {
              "code": 401,
              "responseModel": null,
              "message": "The actor does not have permission to perform this action"
            },
            {
              "code": 401,
              "responseModel": null,
              "message": "Signature has expired"
            },
            {
              "code": 403,
              "responseModel": null,
              "message": "The provided API token is invalid"
            },
            {
              "code": 404,
              "responseModel": null,
              "message": "Service Type not found"
            }
          ],
          "summary": "Deletes a Service Type",
          "notes": "This deletes the Service Type matching the given id",
          "nickname": "V1::ServiceTypes#destroy",
          "method": "delete"
        }
      ]
    },
    {
      "path": "/v1/catalog/refresh",
      "operations": [
        {
          "parameters": [
            {
              "paramType": "header",
              "name": "Authorization",
              "type": "string",
              "description": "Authentication token",
              "required": true
            }
          ],
          "responseMessages": [
            {
              "code": 200,
              "responseModel": "ServiceType",
              "message": "Success"
            },
            {
              "code": 200,
              "responseModel": "ServiceType",
              "message": "Success"
            },
            {
              "code": 400,
              "responseModel": null,
              "message": "Invalid Catalog Repository URI or malformed Repository"
            },
            {
              "code": 401,
              "responseModel": null,
              "message": "The actor does not have permission to perform this action"
            },
            {
              "code": 401,
              "responseModel": null,
              "message": "Signature has expired"
            },
            {
              "code": 403,
              "responseModel": null,
              "message": "The provided API token is invalid"
            },
            {
              "code": 404,
              "responseModel": null,
              "message": "Service Type not found"
            }
          ],
          "summary": "Deletes a Service Type",
          "notes": "This deletes the Service Type matching the given id",
          "nickname": "V1::ServiceTypes#updateAll",
          "method": "get"
        }
      ]
    },
    {
      "path": "/v1/catalog/importcustom",
      "operations": [
        {
          "parameters": [
            {
              "paramType": "header",
              "name": "Authorization",
              "type": "string",
              "description": "Authentication token",
              "required": true
            },
            {
              "paramType": "form",
              "name": "project_id",
              "type": "integer",
              "description": "The If of the Project to import this Catalog into",
              "required": false
            },
            {
              "paramType": "form",
              "name": "custom_catalog_uri",
              "type": "string",
              "description": "The URI of the Github repo containing the Catalog",
              "required": false
            },
            {
              "paramType": "form",
              "name": "custom_catalog_branch",
              "type": "string",
              "description": "The branch of the Github repo containing the Catalog",
              "required": false
            }
          ],
          "responseMessages": [
            {
              "code": 200,
              "responseModel": "ServiceType",
              "message": "Success"
            },
            {
              "code": 200,
              "responseModel": "ServiceType",
              "message": "Success"
            },
            {
              "code": 400,
              "responseModel": null,
              "message": "Invalid Catalog Repository URI or malformed Repository"
            },
            {
              "code": 401,
              "responseModel": null,
              "message": "The actor does not have permission to perform this action"
            },
            {
              "code": 401,
              "responseModel": null,
              "message": "Signature has expired"
            },
            {
              "code": 403,
              "responseModel": null,
              "message": "The provided API token is invalid"
            }
          ],
          "summary": "Deletes a Service Type",
          "notes": "This deletes the Service Type matching the given id",
          "nickname": "V1::ServiceTypes#importCustomCatalog",
          "method": "post"
        }
      ]
    }
  ],
  "authorizations": null
}