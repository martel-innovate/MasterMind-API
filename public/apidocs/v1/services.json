{
  "apiVersion": "1.0",
  "swaggerVersion": "1.2",
  "basePath": "http://localhost:3000",
  "resourcePath": "services",
  "apis": [
    {
      "path": "/v1/projects/{project_id}/services",
      "operations": [
        {
          "responseMessages": [
            {
              "code": 200,
              "responseModel": "Service",
              "message": "Success"
            },
            {
              "code": 401,
              "responseModel": null,
              "message": "The actor does not have permission to perform this action"
            },
            {
              "code": 403,
              "responseModel": null,
              "message": "This resource cannot be accessed"
            },
            {
              "code": 500,
              "responseModel": null,
              "message": "The provided API token is invalid"
            }
          ],
          "summary": "Fetches Services",
          "notes": "This lists all the Services belonging to a given Project",
          "parameters": [
            {
              "paramType": "header",
              "name": "Authorization",
              "type": "string",
              "description": "Authentication token",
              "required": true
            },
            {
              "paramType": "path",
              "name": "project_id",
              "type": "integer",
              "description": "Project Id",
              "required": true
            }
          ],
          "nickname": "V1::Services#index",
          "method": "get"
        }
      ]
    },
    {
      "path": "/v1/projects/{project_id}/services",
      "operations": [
        {
          "responseMessages": [
            {
              "code": 200,
              "responseModel": "Service",
              "message": "Success"
            },
            {
              "code": 401,
              "responseModel": null,
              "message": "The actor does not have permission to perform this action"
            },
            {
              "code": 403,
              "responseModel": null,
              "message": "This resource cannot be accessed"
            },
            {
              "code": 422,
              "responseModel": null,
              "message": "Invalid entity provided"
            },
            {
              "code": 500,
              "responseModel": null,
              "message": "The provided API token is invalid"
            }
          ],
          "summary": "Register a new Service",
          "notes": "This registers a new Service in the given Project",
          "parameters": [
            {
              "paramType": "header",
              "name": "Authorization",
              "type": "string",
              "description": "Authentication token",
              "required": true
            },
            {
              "paramType": "path",
              "name": "project_id",
              "type": "integer",
              "description": "Project Id",
              "required": true
            },
            {
              "paramType": "form",
              "name": "name",
              "type": "string",
              "description": "A name for the Service",
              "required": true
            },
            {
              "paramType": "form",
              "name": "configuration",
              "type": "string",
              "description": "The configuration environment variables (JSON format)",
              "required": true
            },
            {
              "paramType": "form",
              "name": "status",
              "type": "string",
              "description": "The status of the service (active, inactive)",
              "required": true
            },
            {
              "paramType": "form",
              "name": "managed",
              "type": "boolean",
              "description": "Whether this service is managed (deployed by MasterMind) or unmanaged (registered if already deployed)",
              "required": true
            },
            {
              "paramType": "form",
              "name": "endpoint",
              "type": "string",
              "description": "The endpoint of the Service",
              "required": true
            },
            {
              "paramType": "form",
              "name": "latitude",
              "type": "string",
              "description": "The Latitude of the Service's location",
              "required": true
            },
            {
              "paramType": "form",
              "name": "longitude",
              "type": "string",
              "description": "The Longitude of the Service's location",
              "required": true
            },
            {
              "paramType": "form",
              "name": "service_type_id",
              "type": "integer",
              "description": "The id of the Service Type this Service belongs to",
              "required": true
            },
            {
              "paramType": "form",
              "name": "docker_service_id",
              "type": "string",
              "description": "The id of the service inside Docker",
              "required": true
            },
            {
              "paramType": "form",
              "name": "cluster_id",
              "type": "integer",
              "description": "The id of the Cluster this Service belongs to",
              "required": true
            }
          ],
          "nickname": "V1::Services#create",
          "method": "post"
        }
      ]
    },
    {
      "path": "/v1/projects/{project_id}/services/{id}",
      "operations": [
        {
          "responseMessages": [
            {
              "code": 200,
              "responseModel": "Service",
              "message": "Success"
            },
            {
              "code": 401,
              "responseModel": null,
              "message": "The actor does not have permission to perform this action"
            },
            {
              "code": 403,
              "responseModel": null,
              "message": "This resource cannot be accessed"
            },
            {
              "code": 404,
              "responseModel": null,
              "message": "Service not found"
            },
            {
              "code": 500,
              "responseModel": null,
              "message": "The provided API token is invalid"
            }
          ],
          "summary": "Fetches a specific Service",
          "notes": "This fetches the Service matching the given id",
          "parameters": [
            {
              "paramType": "header",
              "name": "Authorization",
              "type": "string",
              "description": "Authentication token",
              "required": true
            },
            {
              "paramType": "path",
              "name": "project_id",
              "type": "integer",
              "description": "Project Id",
              "required": true
            },
            {
              "paramType": "path",
              "name": "id",
              "type": "integer",
              "description": "Service Id",
              "required": true
            }
          ],
          "nickname": "V1::Services#show",
          "method": "get"
        }
      ]
    },
    {
      "path": "/v1/projects/{project_id}/services/{id}",
      "operations": [
        {
          "responseMessages": [
            {
              "code": 200,
              "responseModel": "Service",
              "message": "Success"
            },
            {
              "code": 401,
              "responseModel": null,
              "message": "The actor does not have permission to perform this action"
            },
            {
              "code": 403,
              "responseModel": null,
              "message": "This resource cannot be accessed"
            },
            {
              "code": 404,
              "responseModel": null,
              "message": "Service not found"
            },
            {
              "code": 422,
              "responseModel": null,
              "message": "Invalid entity provided"
            },
            {
              "code": 500,
              "responseModel": null,
              "message": "The provided API token is invalid"
            }
          ],
          "summary": "Updates a Service",
          "notes": "This updates the Service matching the given id",
          "parameters": [
            {
              "paramType": "header",
              "name": "Authorization",
              "type": "string",
              "description": "Authentication token",
              "required": true
            },
            {
              "paramType": "path",
              "name": "project_id",
              "type": "integer",
              "description": "Project Id",
              "required": true
            },
            {
              "paramType": "path",
              "name": "id",
              "type": "integer",
              "description": "Service Id",
              "required": true
            },
            {
              "paramType": "form",
              "name": "name",
              "type": "string",
              "description": "A name for the Service",
              "required": true
            },
            {
              "paramType": "form",
              "name": "configuration",
              "type": "string",
              "description": "The configuration environment variables (JSON format)",
              "required": true
            },
            {
              "paramType": "form",
              "name": "status",
              "type": "string",
              "description": "The status of the service (active, inactive)",
              "required": true
            },
            {
              "paramType": "form",
              "name": "managed",
              "type": "boolean",
              "description": "Whether this service is managed (deployed by MasterMind) or unmanaged (registered if already deployed)",
              "required": true
            },
            {
              "paramType": "form",
              "name": "endpoint",
              "type": "string",
              "description": "The endpoint of the Service",
              "required": true
            },
            {
              "paramType": "form",
              "name": "latitude",
              "type": "string",
              "description": "The Latitude of the Service's location",
              "required": true
            },
            {
              "paramType": "form",
              "name": "longitude",
              "type": "string",
              "description": "The Longitude of the Service's location",
              "required": true
            },
            {
              "paramType": "form",
              "name": "service_type_id",
              "type": "integer",
              "description": "The id of the Service Type this Service belongs to",
              "required": true
            },
            {
              "paramType": "form",
              "name": "docker_service_id",
              "type": "string",
              "description": "The id of the service inside Docker",
              "required": true
            },
            {
              "paramType": "form",
              "name": "cluster_id",
              "type": "integer",
              "description": "The id of the Cluster this Service belongs to",
              "required": true
            }
          ],
          "nickname": "V1::Services#update",
          "method": "patch"
        }
      ]
    },
    {
      "path": "/v1/projects/{project_id}/services/{id}",
      "operations": [
        {
          "responseMessages": [
            {
              "code": 200,
              "responseModel": "Service",
              "message": "Success"
            },
            {
              "code": 401,
              "responseModel": null,
              "message": "The actor does not have permission to perform this action"
            },
            {
              "code": 403,
              "responseModel": null,
              "message": "This resource cannot be accessed"
            },
            {
              "code": 404,
              "responseModel": null,
              "message": "Service not found"
            },
            {
              "code": 500,
              "responseModel": null,
              "message": "The provided API token is invalid"
            }
          ],
          "summary": "Deletes a Service",
          "notes": "This deletes the Service matching the given id",
          "parameters": [
            {
              "paramType": "header",
              "name": "Authorization",
              "type": "string",
              "description": "Authentication token",
              "required": true
            },
            {
              "paramType": "path",
              "name": "project_id",
              "type": "integer",
              "description": "Project Id",
              "required": true
            },
            {
              "paramType": "path",
              "name": "id",
              "type": "integer",
              "description": "Service Id",
              "required": true
            }
          ],
          "nickname": "V1::Services#destroy",
          "method": "delete"
        }
      ]
    }
  ],
  "authorizations": null
}